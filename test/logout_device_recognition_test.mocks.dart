// Mocks generated by Mockito 5.4.6 from annotations
// in cryphoria_mobile/test/logout_device_recognition_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cryphoria_mobile/features/data/services/device_info_service.dart'
    as _i7;
import 'package:cryphoria_mobile/features/domain/entities/auth_user.dart'
    as _i6;
import 'package:cryphoria_mobile/features/domain/entities/login_response.dart'
    as _i2;
import 'package:cryphoria_mobile/features/domain/entities/user_session.dart'
    as _i5;
import 'package:cryphoria_mobile/features/domain/repositories/auth_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  @override
  _i4.Future<_i2.LoginResponse> login(
    String? username,
    String? password, {
    String? deviceName,
    String? deviceId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #login,
              [username, password],
              {#deviceName: deviceName, #deviceId: deviceId},
            ),
            returnValue: _i4.Future<_i2.LoginResponse>.value(
              _FakeLoginResponse_0(
                this,
                Invocation.method(
                  #login,
                  [username, password],
                  {#deviceName: deviceName, #deviceId: deviceId},
                ),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.LoginResponse>.value(
              _FakeLoginResponse_0(
                this,
                Invocation.method(
                  #login,
                  [username, password],
                  {#deviceName: deviceName, #deviceId: deviceId},
                ),
              ),
            ),
          )
          as _i4.Future<_i2.LoginResponse>);

  @override
  _i4.Future<Map<String, dynamic>> logoutCheck() =>
      (super.noSuchMethod(
            Invocation.method(#logoutCheck, []),
            returnValue: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
            returnValueForMissingStub: _i4.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<bool> logoutForce() =>
      (super.noSuchMethod(
            Invocation.method(#logoutForce, []),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<List<_i5.UserSession>> getTransferableSessions() =>
      (super.noSuchMethod(
            Invocation.method(#getTransferableSessions, []),
            returnValue: _i4.Future<List<_i5.UserSession>>.value(
              <_i5.UserSession>[],
            ),
            returnValueForMissingStub: _i4.Future<List<_i5.UserSession>>.value(
              <_i5.UserSession>[],
            ),
          )
          as _i4.Future<List<_i5.UserSession>>);

  @override
  _i4.Future<bool> transferMainDevice(String? sessionId) =>
      (super.noSuchMethod(
            Invocation.method(#transferMainDevice, [sessionId]),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> confirmPassword(String? password) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPassword, [password]),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> validateSession() =>
      (super.noSuchMethod(
            Invocation.method(#validateSession, []),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> cacheAuthUser(_i6.AuthUser? user) =>
      (super.noSuchMethod(
            Invocation.method(#cacheAuthUser, [user]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i6.AuthUser?> getCachedAuthUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedAuthUser, []),
            returnValue: _i4.Future<_i6.AuthUser?>.value(),
            returnValueForMissingStub: _i4.Future<_i6.AuthUser?>.value(),
          )
          as _i4.Future<_i6.AuthUser?>);

  @override
  _i4.Future<void> clearCache() =>
      (super.noSuchMethod(
            Invocation.method(#clearCache, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [DeviceInfoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoService extends _i1.Mock implements _i7.DeviceInfoService {
  @override
  _i4.Future<String> getDeviceName() =>
      (super.noSuchMethod(
            Invocation.method(#getDeviceName, []),
            returnValue: _i4.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#getDeviceName, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<String>.value(
              _i8.dummyValue<String>(
                this,
                Invocation.method(#getDeviceName, []),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<String> getDeviceId() =>
      (super.noSuchMethod(
            Invocation.method(#getDeviceId, []),
            returnValue: _i4.Future<String>.value(
              _i8.dummyValue<String>(this, Invocation.method(#getDeviceId, [])),
            ),
            returnValueForMissingStub: _i4.Future<String>.value(
              _i8.dummyValue<String>(this, Invocation.method(#getDeviceId, [])),
            ),
          )
          as _i4.Future<String>);
}
