// Mocks generated by Mockito 5.4.6 from annotations
// in cryphoria_mobile/test/features/domain/usecases/session_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cryphoria_mobile/features/domain/entities/user_session.dart'
    as _i5;
import 'package:cryphoria_mobile/features/domain/repositories/auth_repository.dart'
    as _i2;
import 'package:cryphoria_mobile/features/domain/usecases/Session/approve_session_usecase.dart'
    as _i6;
import 'package:cryphoria_mobile/features/domain/usecases/Session/get_sessions_usecase.dart'
    as _i3;
import 'package:cryphoria_mobile/features/domain/usecases/Session/revoke_other_sessions_usecase.dart'
    as _i8;
import 'package:cryphoria_mobile/features/domain/usecases/Session/revoke_session_usecase.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRepository_0 extends _i1.SmartFake
    implements _i2.AuthRepository {
  _FakeAuthRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetSessions].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSessions extends _i1.Mock implements _i3.GetSessions {
  MockGetSessions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeAuthRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.AuthRepository);

  @override
  _i4.Future<List<_i5.UserSession>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue: _i4.Future<List<_i5.UserSession>>.value(
              <_i5.UserSession>[],
            ),
          )
          as _i4.Future<List<_i5.UserSession>>);
}

/// A class which mocks [ApproveSession].
///
/// See the documentation for Mockito's code generation for more information.
class MockApproveSession extends _i1.Mock implements _i6.ApproveSession {
  MockApproveSession() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeAuthRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.AuthRepository);

  @override
  _i4.Future<bool> execute(String? sessionId) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [sessionId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [RevokeSession].
///
/// See the documentation for Mockito's code generation for more information.
class MockRevokeSession extends _i1.Mock implements _i7.RevokeSession {
  MockRevokeSession() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeAuthRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.AuthRepository);

  @override
  _i4.Future<bool> execute(String? sessionId) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [sessionId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [RevokeOtherSessions].
///
/// See the documentation for Mockito's code generation for more information.
class MockRevokeOtherSessions extends _i1.Mock
    implements _i8.RevokeOtherSessions {
  MockRevokeOtherSessions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeAuthRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.AuthRepository);

  @override
  _i4.Future<bool> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}
